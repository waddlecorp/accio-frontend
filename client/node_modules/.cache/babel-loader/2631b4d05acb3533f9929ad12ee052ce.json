{"ast":null,"code":"var _jsxFileName = \"/workspace/sorigpt/client/src/containers/Chat.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\nimport ChatComp from '../components/Chat';\nimport { SocketContext } from '../contexts/SocketContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chat = () => {\n  _s();\n\n  const {\n    roomId,\n    userId\n  } = useParams();\n  const {\n    joinRoom,\n    sendMessage,\n    updateMessage\n  } = useContext(SocketContext);\n  const [messages, setMessages] = useState([]);\n  const navigate = useNavigate();\n\n  const addMessage = message => {\n    setMessages(prev => prev.concat(message));\n  };\n\n  useEffect(() => {\n    try {\n      joinRoom({\n        userId,\n        roomId\n      });\n      updateMessage(addMessage);\n    } catch {\n      navigate('/');\n    }\n  }, []);\n\n  const submitMessage = message => {\n    if (message.trim()) {\n      sendMessage({\n        roomId,\n        userId,\n        message\n      });\n    } else {\n      toast.error(\"메세지를 입력해주세요.\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChatComp, {\n    submitMessage: submitMessage,\n    messages: messages,\n    myId: userId\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Chat, \"5I28cctk6sQ5jqdrwLTYQ9cm0to=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useEffect","useState","useContext","useParams","useNavigate","toast","ChatComp","SocketContext","Chat","roomId","userId","joinRoom","sendMessage","updateMessage","messages","setMessages","navigate","addMessage","message","prev","concat","submitMessage","trim","error"],"sources":["/workspace/sorigpt/client/src/containers/Chat.jsx"],"sourcesContent":["import { useEffect, useState, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\n\nimport ChatComp from '../components/Chat';\nimport { SocketContext } from '../contexts/SocketContext';\n\nconst Chat = () => {\n    const { roomId, userId } = useParams();\n    const { joinRoom, sendMessage, updateMessage } = useContext(SocketContext);\n    const [ messages, setMessages ] = useState([]);\n    const navigate = useNavigate();\n    \n    const addMessage = (message) => {\n        setMessages((prev) => prev.concat(message));\n    }\n        \n    useEffect(() => {\n        try {\n            joinRoom({userId, roomId});\n            updateMessage(addMessage);\n        } catch {\n            navigate('/');\n        }\n    }, []);\n    \n    const submitMessage = (message) => {\n        if(message.trim()) {\n            sendMessage({roomId, userId, message});\n        } else {\n            toast.error(\"메세지를 입력해주세요.\")\n        }\n        \n    }\n    \n    return (<ChatComp submitMessage={submitMessage} messages={messages} myId={userId}/>);\n}\n\nexport default Chat;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,kBAAvC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAASC,aAAT,QAA8B,2BAA9B;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACf,MAAM;IAAEC,MAAF;IAAUC;EAAV,IAAqBP,SAAS,EAApC;EACA,MAAM;IAAEQ,QAAF;IAAYC,WAAZ;IAAyBC;EAAzB,IAA2CX,UAAU,CAACK,aAAD,CAA3D;EACA,MAAM,CAAEO,QAAF,EAAYC,WAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAMe,QAAQ,GAAGZ,WAAW,EAA5B;;EAEA,MAAMa,UAAU,GAAIC,OAAD,IAAa;IAC5BH,WAAW,CAAEI,IAAD,IAAUA,IAAI,CAACC,MAAL,CAAYF,OAAZ,CAAX,CAAX;EACH,CAFD;;EAIAlB,SAAS,CAAC,MAAM;IACZ,IAAI;MACAW,QAAQ,CAAC;QAACD,MAAD;QAASD;MAAT,CAAD,CAAR;MACAI,aAAa,CAACI,UAAD,CAAb;IACH,CAHD,CAGE,MAAM;MACJD,QAAQ,CAAC,GAAD,CAAR;IACH;EACJ,CAPQ,EAON,EAPM,CAAT;;EASA,MAAMK,aAAa,GAAIH,OAAD,IAAa;IAC/B,IAAGA,OAAO,CAACI,IAAR,EAAH,EAAmB;MACfV,WAAW,CAAC;QAACH,MAAD;QAASC,MAAT;QAAiBQ;MAAjB,CAAD,CAAX;IACH,CAFD,MAEO;MACHb,KAAK,CAACkB,KAAN,CAAY,cAAZ;IACH;EAEJ,CAPD;;EASA,oBAAQ,QAAC,QAAD;IAAU,aAAa,EAAEF,aAAzB;IAAwC,QAAQ,EAAEP,QAAlD;IAA4D,IAAI,EAAEJ;EAAlE;IAAA;IAAA;IAAA;EAAA,QAAR;AACH,CA7BD;;GAAMF,I;UACyBL,S,EAGVC,W;;;KAJfI,I;AA+BN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}