{"ast":null,"code":"var _jsxFileName = \"/workspace/sorigpt/client/src/components/ChatRoomEntry/ChatRoomEntry.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { toast } from \"react-toastify\";\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/material/Stack';\nimport style from './ChatRoomEntry.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatRoomEntry = _ref => {\n  _s();\n\n  let {\n    enterChatRoom\n  } = _ref;\n  const [chatRoomId, setChatRoomId] = useState('');\n  const [nickname, setNickname] = useState('');\n\n  const isInvalidNickname = () => {\n    const pattern = /^\\S.{0,14}\\S$/;\n    const invalid = nickname.length > 16 || nickname.length < 2 || !pattern.test(nickname);\n    return invalid;\n  };\n\n  const isInvalidChatRoomId = () => {\n    const pattern = /^[A-Za-z0-9]*$/;\n    const invalid = chatRoomId.length > 16 || chatRoomId.length < 2 || !pattern.test(chatRoomId);\n    return invalid;\n  };\n\n  const onChangeChatRoomId = e => {\n    const input = e.currentTarget.value;\n    setChatRoomId(input);\n  };\n\n  const onChangeNickname = e => {\n    const input = e.currentTarget.value;\n    setNickname(input);\n  };\n\n  const onClick = () => {\n    if (isInvalidNickname()) {\n      toast.error(\"닉네임은 앞뒤 공백 없는 2~16글자만 가능합니다.\");\n      return;\n    }\n\n    if (isInvalidChatRoomId()) {\n      toast.error(\"채팅방 아이디는 알파벳, 숫자로만 이루어진 2~16글자 문자입니다.\");\n      return;\n    }\n\n    enterChatRoom({\n      nickname,\n      chatRoomId\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    className: style.ChatRoomEntry,\n    alignItems: \"center\",\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.ChatRoomEntry__title,\n      children: \"ACCIO\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"CHAT ID\",\n      variant: \"outlined\",\n      value: chatRoomId,\n      onChange: onChangeChatRoomId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"NICKNAME\",\n      variant: \"outlined\",\n      value: nickname,\n      onChange: onChangeNickname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: onClick,\n      size: \"large\",\n      children: \"\\uC2DC\\uC791\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatRoomEntry, \"kIryA+tXULjN+ydSpTb1sWqFKA4=\");\n\n_c = ChatRoomEntry;\nexport default ChatRoomEntry;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoomEntry\");","map":{"version":3,"names":["React","useState","toast","Button","TextField","Stack","style","ChatRoomEntry","enterChatRoom","chatRoomId","setChatRoomId","nickname","setNickname","isInvalidNickname","pattern","invalid","length","test","isInvalidChatRoomId","onChangeChatRoomId","e","input","currentTarget","value","onChangeNickname","onClick","error","ChatRoomEntry__title"],"sources":["/workspace/sorigpt/client/src/components/ChatRoomEntry/ChatRoomEntry.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { toast } from \"react-toastify\";\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/material/Stack';\n\nimport style from './ChatRoomEntry.module.scss';\n\nconst ChatRoomEntry = ({enterChatRoom}) => {\n    const [chatRoomId, setChatRoomId] = useState('');\n    const [nickname, setNickname] = useState('');\n    \n    const isInvalidNickname = () => {\n        const pattern = /^\\S.{0,14}\\S$/;\n        const invalid = nickname.length > 16 || nickname.length < 2 || !pattern.test(nickname);\n        \n        return invalid;\n    }\n    \n    const isInvalidChatRoomId = () => {\n        const pattern = /^[A-Za-z0-9]*$/;\n        const invalid = chatRoomId.length > 16 || chatRoomId.length < 2 || !pattern.test(chatRoomId);\n        \n        return invalid;\n    }\n    \n    const onChangeChatRoomId = (e) => {\n        const input = e.currentTarget.value;\n        setChatRoomId(input);\n    }\n    \n    const onChangeNickname = (e) => {\n        const input = e.currentTarget.value;\n        setNickname(input);\n    }\n    \n    const onClick = () => {\n        if (isInvalidNickname()) {\n            toast.error(\"닉네임은 앞뒤 공백 없는 2~16글자만 가능합니다.\");\n            return;\n        }\n        \n        if (isInvalidChatRoomId()) {\n            toast.error(\"채팅방 아이디는 알파벳, 숫자로만 이루어진 2~16글자 문자입니다.\");\n            return;\n        }  \n        enterChatRoom({nickname, chatRoomId});\n    }\n    \n    return (\n        <Stack className={style.ChatRoomEntry} alignItems=\"center\" spacing={2}>\n            <div className={style.ChatRoomEntry__title}>ACCIO</div>\n            <TextField label=\"CHAT ID\" variant=\"outlined\" value={chatRoomId} onChange={onChangeChatRoomId}/>\n            <TextField label=\"NICKNAME\" variant=\"outlined\" value={nickname} onChange={onChangeNickname}/>\n            <Button onClick={onClick} size=\"large\">시작하기</Button>\n        </Stack>\n    );\n    \n}\n\nexport default ChatRoomEntry;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,OAAOC,KAAP,MAAkB,6BAAlB;;;AAEA,MAAMC,aAAa,GAAG,QAAqB;EAAA;;EAAA,IAApB;IAACC;EAAD,CAAoB;EACvC,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;;EAEA,MAAMY,iBAAiB,GAAG,MAAM;IAC5B,MAAMC,OAAO,GAAG,eAAhB;IACA,MAAMC,OAAO,GAAGJ,QAAQ,CAACK,MAAT,GAAkB,EAAlB,IAAwBL,QAAQ,CAACK,MAAT,GAAkB,CAA1C,IAA+C,CAACF,OAAO,CAACG,IAAR,CAAaN,QAAb,CAAhE;IAEA,OAAOI,OAAP;EACH,CALD;;EAOA,MAAMG,mBAAmB,GAAG,MAAM;IAC9B,MAAMJ,OAAO,GAAG,gBAAhB;IACA,MAAMC,OAAO,GAAGN,UAAU,CAACO,MAAX,GAAoB,EAApB,IAA0BP,UAAU,CAACO,MAAX,GAAoB,CAA9C,IAAmD,CAACF,OAAO,CAACG,IAAR,CAAaR,UAAb,CAApE;IAEA,OAAOM,OAAP;EACH,CALD;;EAOA,MAAMI,kBAAkB,GAAIC,CAAD,IAAO;IAC9B,MAAMC,KAAK,GAAGD,CAAC,CAACE,aAAF,CAAgBC,KAA9B;IACAb,aAAa,CAACW,KAAD,CAAb;EACH,CAHD;;EAKA,MAAMG,gBAAgB,GAAIJ,CAAD,IAAO;IAC5B,MAAMC,KAAK,GAAGD,CAAC,CAACE,aAAF,CAAgBC,KAA9B;IACAX,WAAW,CAACS,KAAD,CAAX;EACH,CAHD;;EAKA,MAAMI,OAAO,GAAG,MAAM;IAClB,IAAIZ,iBAAiB,EAArB,EAAyB;MACrBX,KAAK,CAACwB,KAAN,CAAY,8BAAZ;MACA;IACH;;IAED,IAAIR,mBAAmB,EAAvB,EAA2B;MACvBhB,KAAK,CAACwB,KAAN,CAAY,uCAAZ;MACA;IACH;;IACDlB,aAAa,CAAC;MAACG,QAAD;MAAWF;IAAX,CAAD,CAAb;EACH,CAXD;;EAaA,oBACI,QAAC,KAAD;IAAO,SAAS,EAAEH,KAAK,CAACC,aAAxB;IAAuC,UAAU,EAAC,QAAlD;IAA2D,OAAO,EAAE,CAApE;IAAA,wBACI;MAAK,SAAS,EAAED,KAAK,CAACqB,oBAAtB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,SAAD;MAAW,KAAK,EAAC,SAAjB;MAA2B,OAAO,EAAC,UAAnC;MAA8C,KAAK,EAAElB,UAArD;MAAiE,QAAQ,EAAEU;IAA3E;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI,QAAC,SAAD;MAAW,KAAK,EAAC,UAAjB;MAA4B,OAAO,EAAC,UAApC;MAA+C,KAAK,EAAER,QAAtD;MAAgE,QAAQ,EAAEa;IAA1E;MAAA;MAAA;MAAA;IAAA,QAHJ,eAII,QAAC,MAAD;MAAQ,OAAO,EAAEC,OAAjB;MAA0B,IAAI,EAAC,OAA/B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AASH,CAlDD;;GAAMlB,a;;KAAAA,a;AAoDN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}