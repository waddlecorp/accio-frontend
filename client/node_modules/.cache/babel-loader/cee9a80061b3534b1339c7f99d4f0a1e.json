{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { ActionTypes } from './useListbox.types';\nconst pageSize = 5;\n\nfunction findValidOptionToHighlight(index, lookupDirection, options, focusDisabled, isOptionDisabled, wrapAround) {\n  if (options.length === 0 || options.every((o, i) => isOptionDisabled(o, i))) {\n    return -1;\n  }\n\n  let nextFocus = index;\n\n  for (;;) {\n    // No valid options found\n    if (!wrapAround && lookupDirection === 'next' && nextFocus === options.length || !wrapAround && lookupDirection === 'previous' && nextFocus === -1) {\n      return -1;\n    }\n\n    const nextFocusDisabled = focusDisabled ? false : isOptionDisabled(options[nextFocus], nextFocus);\n\n    if (nextFocusDisabled) {\n      nextFocus += lookupDirection === 'next' ? 1 : -1;\n\n      if (wrapAround) {\n        nextFocus = (nextFocus + options.length) % options.length;\n      }\n    } else {\n      return nextFocus;\n    }\n  }\n}\n\nfunction getNewHighlightedOption(options, previouslyHighlightedOption, diff, highlightDisabledOptions, isOptionDisabled, disableListWrap, optionComparer) {\n  var _options$nextIndex;\n\n  const maxIndex = options.length - 1;\n  const defaultHighlightedIndex = -1;\n  const previouslyHighlightedIndex = previouslyHighlightedOption == null ? -1 : options.findIndex(option => optionComparer(option, previouslyHighlightedOption));\n  let nextIndexCandidate;\n  let lookupDirection;\n  let wrapAround;\n\n  switch (diff) {\n    case 'reset':\n      if (defaultHighlightedIndex === -1) {\n        return null;\n      }\n\n      nextIndexCandidate = 0;\n      lookupDirection = 'next';\n      wrapAround = false;\n      break;\n\n    case 'start':\n      nextIndexCandidate = 0;\n      lookupDirection = 'next';\n      wrapAround = false;\n      break;\n\n    case 'end':\n      nextIndexCandidate = maxIndex;\n      lookupDirection = 'previous';\n      wrapAround = false;\n      break;\n\n    default:\n      {\n        const newIndex = previouslyHighlightedIndex + diff;\n        wrapAround = !disableListWrap;\n\n        if (newIndex < 0) {\n          if (!wrapAround && previouslyHighlightedIndex !== -1 || Math.abs(diff) > 1) {\n            nextIndexCandidate = 0;\n            lookupDirection = 'next';\n          } else {\n            nextIndexCandidate = maxIndex;\n            lookupDirection = 'previous';\n          }\n        } else if (newIndex > maxIndex) {\n          if (!wrapAround || Math.abs(diff) > 1) {\n            nextIndexCandidate = maxIndex;\n            lookupDirection = 'previous';\n          } else {\n            nextIndexCandidate = 0;\n            lookupDirection = 'next';\n          }\n        } else {\n          nextIndexCandidate = newIndex;\n          lookupDirection = diff >= 0 ? 'next' : 'previous';\n        }\n      }\n  }\n\n  const nextIndex = findValidOptionToHighlight(nextIndexCandidate, lookupDirection, options, highlightDisabledOptions, isOptionDisabled, wrapAround);\n  return (_options$nextIndex = options[nextIndex]) != null ? _options$nextIndex : null;\n}\n\nfunction moveHighlight(previouslyHighlightedOption, diff, props) {\n  const {\n    options,\n    isOptionDisabled,\n    disableListWrap,\n    disabledItemsFocusable,\n    optionComparer\n  } = props;\n  return getNewHighlightedOption(options, previouslyHighlightedOption, diff, disabledItemsFocusable != null ? disabledItemsFocusable : false, isOptionDisabled != null ? isOptionDisabled : () => false, disableListWrap != null ? disableListWrap : false, optionComparer != null ? optionComparer : (o1, o2) => o1 === o2);\n}\n\nfunction toggleSelection(option, selectedOptions, selectionLimit, optionComparer) {\n  if (selectionLimit === 0) {\n    return [];\n  } // Selection limit = 1 is a special case - we don't want to allow deselecting the option.\n\n\n  if (selectionLimit === 1) {\n    if (optionComparer(selectedOptions[0], option)) {\n      return selectedOptions;\n    }\n\n    return [option];\n  } // The toggled option is selected; remove it from the selection.\n\n\n  if (selectedOptions.some(so => optionComparer(so, option))) {\n    return selectedOptions.filter(so => !optionComparer(so, option));\n  } // The toggled option is not selected and the selected array is shorter than the limit - add to the selection.\n\n\n  if (selectionLimit === null || selectedOptions.length < selectionLimit) {\n    return [...selectedOptions, option];\n  } // Truncate the selection to the limit (discard items with lower indexes).\n\n\n  const newSelection = selectedOptions.slice(selectedOptions.length - selectionLimit + 1);\n  newSelection.push(option);\n  return newSelection;\n}\n\nfunction handleOptionSelection(option, state, props) {\n  const {\n    optionComparer = (o, v) => o === v,\n    isOptionDisabled = () => false,\n    selectionLimit\n  } = props;\n  const {\n    selectedValues\n  } = state;\n  const optionIndex = props.options.findIndex(o => props.optionComparer(option, o));\n\n  if (isOptionDisabled(option, optionIndex)) {\n    return state;\n  } // if the option is already selected, remove it from the selection, otherwise add it\n\n\n  const newSelectedValues = toggleSelection(option, selectedValues, selectionLimit, optionComparer);\n  return {\n    selectedValues: newSelectedValues,\n    highlightedValue: option\n  };\n}\n\nfunction handleKeyDown(event, state, parameters) {\n  const previouslySelectedValue = state.highlightedValue;\n\n  switch (event.key) {\n    case 'Home':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, 'start', parameters)\n      });\n\n    case 'End':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, 'end', parameters)\n      });\n\n    case 'PageUp':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, -pageSize, parameters)\n      });\n\n    case 'PageDown':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, pageSize, parameters)\n      });\n\n    case 'ArrowUp':\n      // TODO: extend current selection with Shift modifier\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, -1, parameters)\n      });\n\n    case 'ArrowDown':\n      // TODO: extend current selection with Shift modifier\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, 1, parameters)\n      });\n\n    case 'Enter':\n    case ' ':\n      if (state.highlightedValue === null) {\n        return state;\n      }\n\n      return handleOptionSelection(state.highlightedValue, state, parameters);\n\n    default:\n      break;\n  }\n\n  return state;\n}\n\nfunction handleBlur(state) {\n  return _extends({}, state, {\n    highlightedValue: null\n  });\n}\n\nconst textCriteriaMatches = (nextFocus, searchString, stringifyOption) => {\n  var _stringifyOption;\n\n  const text = (_stringifyOption = stringifyOption(nextFocus)) == null ? void 0 : _stringifyOption.trim().toLowerCase();\n\n  if (!text || text.length === 0) {\n    // Make option not navigable if stringification fails or results in empty string.\n    return false;\n  }\n\n  return text.indexOf(searchString) === 0;\n};\n\nfunction handleTextNavigation(state, searchString, props) {\n  const {\n    options,\n    isOptionDisabled,\n    disableListWrap,\n    disabledItemsFocusable,\n    optionComparer,\n    optionStringifier\n  } = props;\n  const startWithCurrentOption = searchString.length > 1;\n  let nextOption = startWithCurrentOption ? state.highlightedValue : getNewHighlightedOption(options, state.highlightedValue, 1, disabledItemsFocusable != null ? disabledItemsFocusable : false, isOptionDisabled != null ? isOptionDisabled : () => false, disableListWrap != null ? disableListWrap : false, optionComparer); // use `for` instead of `while` prevent infinite loop\n\n  for (let index = 0; index < options.length; index += 1) {\n    // Return un-mutated state if looped back to the currently highlighted value\n    if (!nextOption || !startWithCurrentOption && state.highlightedValue === nextOption) {\n      return state;\n    }\n\n    if (textCriteriaMatches(nextOption, searchString, optionStringifier) && (!isOptionDisabled(nextOption, options.indexOf(nextOption)) || disabledItemsFocusable)) {\n      // The nextOption is the element to be highlighted\n      return _extends({}, state, {\n        highlightedValue: nextOption\n      });\n    } // Move to the next element.\n\n\n    nextOption = getNewHighlightedOption(options, nextOption, 1, disabledItemsFocusable != null ? disabledItemsFocusable : false, isOptionDisabled != null ? isOptionDisabled : () => false, disableListWrap != null ? disableListWrap : false, optionComparer);\n  } // No option match text search criteria\n\n\n  return state;\n}\n\nfunction handleOptionsChange(options, state, props) {\n  var _options$find, _state$selectedValues;\n\n  const {\n    optionComparer\n  } = props;\n  const newHighlightedOption = state.highlightedValue == null ? null : (_options$find = options.find(option => optionComparer(option, state.highlightedValue))) != null ? _options$find : null; // exclude selected values that are no longer in the options\n\n  const selectedValues = (_state$selectedValues = state.selectedValues) != null ? _state$selectedValues : [];\n  const newSelectedValues = selectedValues.filter(selectedValue => options.some(option => optionComparer(option, selectedValue)));\n  return {\n    highlightedValue: newHighlightedOption,\n    selectedValues: newSelectedValues\n  };\n}\n\nexport default function defaultListboxReducer(state, action) {\n  const {\n    type\n  } = action;\n\n  switch (type) {\n    case ActionTypes.keyDown:\n      return handleKeyDown(action.event, state, action.props);\n\n    case ActionTypes.optionClick:\n      return handleOptionSelection(action.option, state, action.props);\n\n    case ActionTypes.blur:\n      return handleBlur(state);\n\n    case ActionTypes.setValue:\n      return _extends({}, state, {\n        selectedValues: action.value\n      });\n\n    case ActionTypes.setHighlight:\n      return _extends({}, state, {\n        highlightedValue: action.highlight\n      });\n\n    case ActionTypes.textNavigation:\n      return handleTextNavigation(state, action.searchString, action.props);\n\n    case ActionTypes.optionsChange:\n      return handleOptionsChange(action.options, state, action.props);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["_extends","ActionTypes","pageSize","findValidOptionToHighlight","index","lookupDirection","options","focusDisabled","isOptionDisabled","wrapAround","length","every","o","i","nextFocus","nextFocusDisabled","getNewHighlightedOption","previouslyHighlightedOption","diff","highlightDisabledOptions","disableListWrap","optionComparer","_options$nextIndex","maxIndex","defaultHighlightedIndex","previouslyHighlightedIndex","findIndex","option","nextIndexCandidate","newIndex","Math","abs","nextIndex","moveHighlight","props","disabledItemsFocusable","o1","o2","toggleSelection","selectedOptions","selectionLimit","some","so","filter","newSelection","slice","push","handleOptionSelection","state","v","selectedValues","optionIndex","newSelectedValues","highlightedValue","handleKeyDown","event","parameters","previouslySelectedValue","key","handleBlur","textCriteriaMatches","searchString","stringifyOption","_stringifyOption","text","trim","toLowerCase","indexOf","handleTextNavigation","optionStringifier","startWithCurrentOption","nextOption","handleOptionsChange","_options$find","_state$selectedValues","newHighlightedOption","find","selectedValue","defaultListboxReducer","action","type","keyDown","optionClick","blur","setValue","value","setHighlight","highlight","textNavigation","optionsChange"],"sources":["/workspace/sorigpt/node_modules/@mui/base/useListbox/defaultListboxReducer.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { ActionTypes } from './useListbox.types';\nconst pageSize = 5;\nfunction findValidOptionToHighlight(index, lookupDirection, options, focusDisabled, isOptionDisabled, wrapAround) {\n  if (options.length === 0 || options.every((o, i) => isOptionDisabled(o, i))) {\n    return -1;\n  }\n  let nextFocus = index;\n  for (;;) {\n    // No valid options found\n    if (!wrapAround && lookupDirection === 'next' && nextFocus === options.length || !wrapAround && lookupDirection === 'previous' && nextFocus === -1) {\n      return -1;\n    }\n    const nextFocusDisabled = focusDisabled ? false : isOptionDisabled(options[nextFocus], nextFocus);\n    if (nextFocusDisabled) {\n      nextFocus += lookupDirection === 'next' ? 1 : -1;\n      if (wrapAround) {\n        nextFocus = (nextFocus + options.length) % options.length;\n      }\n    } else {\n      return nextFocus;\n    }\n  }\n}\nfunction getNewHighlightedOption(options, previouslyHighlightedOption, diff, highlightDisabledOptions, isOptionDisabled, disableListWrap, optionComparer) {\n  var _options$nextIndex;\n  const maxIndex = options.length - 1;\n  const defaultHighlightedIndex = -1;\n  const previouslyHighlightedIndex = previouslyHighlightedOption == null ? -1 : options.findIndex(option => optionComparer(option, previouslyHighlightedOption));\n  let nextIndexCandidate;\n  let lookupDirection;\n  let wrapAround;\n  switch (diff) {\n    case 'reset':\n      if (defaultHighlightedIndex === -1) {\n        return null;\n      }\n      nextIndexCandidate = 0;\n      lookupDirection = 'next';\n      wrapAround = false;\n      break;\n    case 'start':\n      nextIndexCandidate = 0;\n      lookupDirection = 'next';\n      wrapAround = false;\n      break;\n    case 'end':\n      nextIndexCandidate = maxIndex;\n      lookupDirection = 'previous';\n      wrapAround = false;\n      break;\n    default:\n      {\n        const newIndex = previouslyHighlightedIndex + diff;\n        wrapAround = !disableListWrap;\n        if (newIndex < 0) {\n          if (!wrapAround && previouslyHighlightedIndex !== -1 || Math.abs(diff) > 1) {\n            nextIndexCandidate = 0;\n            lookupDirection = 'next';\n          } else {\n            nextIndexCandidate = maxIndex;\n            lookupDirection = 'previous';\n          }\n        } else if (newIndex > maxIndex) {\n          if (!wrapAround || Math.abs(diff) > 1) {\n            nextIndexCandidate = maxIndex;\n            lookupDirection = 'previous';\n          } else {\n            nextIndexCandidate = 0;\n            lookupDirection = 'next';\n          }\n        } else {\n          nextIndexCandidate = newIndex;\n          lookupDirection = diff >= 0 ? 'next' : 'previous';\n        }\n      }\n  }\n  const nextIndex = findValidOptionToHighlight(nextIndexCandidate, lookupDirection, options, highlightDisabledOptions, isOptionDisabled, wrapAround);\n  return (_options$nextIndex = options[nextIndex]) != null ? _options$nextIndex : null;\n}\nfunction moveHighlight(previouslyHighlightedOption, diff, props) {\n  const {\n    options,\n    isOptionDisabled,\n    disableListWrap,\n    disabledItemsFocusable,\n    optionComparer\n  } = props;\n  return getNewHighlightedOption(options, previouslyHighlightedOption, diff, disabledItemsFocusable != null ? disabledItemsFocusable : false, isOptionDisabled != null ? isOptionDisabled : () => false, disableListWrap != null ? disableListWrap : false, optionComparer != null ? optionComparer : (o1, o2) => o1 === o2);\n}\nfunction toggleSelection(option, selectedOptions, selectionLimit, optionComparer) {\n  if (selectionLimit === 0) {\n    return [];\n  }\n\n  // Selection limit = 1 is a special case - we don't want to allow deselecting the option.\n  if (selectionLimit === 1) {\n    if (optionComparer(selectedOptions[0], option)) {\n      return selectedOptions;\n    }\n    return [option];\n  }\n\n  // The toggled option is selected; remove it from the selection.\n  if (selectedOptions.some(so => optionComparer(so, option))) {\n    return selectedOptions.filter(so => !optionComparer(so, option));\n  }\n\n  // The toggled option is not selected and the selected array is shorter than the limit - add to the selection.\n  if (selectionLimit === null || selectedOptions.length < selectionLimit) {\n    return [...selectedOptions, option];\n  }\n\n  // Truncate the selection to the limit (discard items with lower indexes).\n  const newSelection = selectedOptions.slice(selectedOptions.length - selectionLimit + 1);\n  newSelection.push(option);\n  return newSelection;\n}\nfunction handleOptionSelection(option, state, props) {\n  const {\n    optionComparer = (o, v) => o === v,\n    isOptionDisabled = () => false,\n    selectionLimit\n  } = props;\n  const {\n    selectedValues\n  } = state;\n  const optionIndex = props.options.findIndex(o => props.optionComparer(option, o));\n  if (isOptionDisabled(option, optionIndex)) {\n    return state;\n  }\n\n  // if the option is already selected, remove it from the selection, otherwise add it\n  const newSelectedValues = toggleSelection(option, selectedValues, selectionLimit, optionComparer);\n  return {\n    selectedValues: newSelectedValues,\n    highlightedValue: option\n  };\n}\nfunction handleKeyDown(event, state, parameters) {\n  const previouslySelectedValue = state.highlightedValue;\n  switch (event.key) {\n    case 'Home':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, 'start', parameters)\n      });\n    case 'End':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, 'end', parameters)\n      });\n    case 'PageUp':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, -pageSize, parameters)\n      });\n    case 'PageDown':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, pageSize, parameters)\n      });\n    case 'ArrowUp':\n      // TODO: extend current selection with Shift modifier\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, -1, parameters)\n      });\n    case 'ArrowDown':\n      // TODO: extend current selection with Shift modifier\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, 1, parameters)\n      });\n    case 'Enter':\n    case ' ':\n      if (state.highlightedValue === null) {\n        return state;\n      }\n      return handleOptionSelection(state.highlightedValue, state, parameters);\n    default:\n      break;\n  }\n  return state;\n}\nfunction handleBlur(state) {\n  return _extends({}, state, {\n    highlightedValue: null\n  });\n}\nconst textCriteriaMatches = (nextFocus, searchString, stringifyOption) => {\n  var _stringifyOption;\n  const text = (_stringifyOption = stringifyOption(nextFocus)) == null ? void 0 : _stringifyOption.trim().toLowerCase();\n  if (!text || text.length === 0) {\n    // Make option not navigable if stringification fails or results in empty string.\n    return false;\n  }\n  return text.indexOf(searchString) === 0;\n};\nfunction handleTextNavigation(state, searchString, props) {\n  const {\n    options,\n    isOptionDisabled,\n    disableListWrap,\n    disabledItemsFocusable,\n    optionComparer,\n    optionStringifier\n  } = props;\n  const startWithCurrentOption = searchString.length > 1;\n  let nextOption = startWithCurrentOption ? state.highlightedValue : getNewHighlightedOption(options, state.highlightedValue, 1, disabledItemsFocusable != null ? disabledItemsFocusable : false, isOptionDisabled != null ? isOptionDisabled : () => false, disableListWrap != null ? disableListWrap : false, optionComparer);\n\n  // use `for` instead of `while` prevent infinite loop\n  for (let index = 0; index < options.length; index += 1) {\n    // Return un-mutated state if looped back to the currently highlighted value\n    if (!nextOption || !startWithCurrentOption && state.highlightedValue === nextOption) {\n      return state;\n    }\n    if (textCriteriaMatches(nextOption, searchString, optionStringifier) && (!isOptionDisabled(nextOption, options.indexOf(nextOption)) || disabledItemsFocusable)) {\n      // The nextOption is the element to be highlighted\n      return _extends({}, state, {\n        highlightedValue: nextOption\n      });\n    }\n    // Move to the next element.\n    nextOption = getNewHighlightedOption(options, nextOption, 1, disabledItemsFocusable != null ? disabledItemsFocusable : false, isOptionDisabled != null ? isOptionDisabled : () => false, disableListWrap != null ? disableListWrap : false, optionComparer);\n  }\n\n  // No option match text search criteria\n  return state;\n}\nfunction handleOptionsChange(options, state, props) {\n  var _options$find, _state$selectedValues;\n  const {\n    optionComparer\n  } = props;\n  const newHighlightedOption = state.highlightedValue == null ? null : (_options$find = options.find(option => optionComparer(option, state.highlightedValue))) != null ? _options$find : null;\n\n  // exclude selected values that are no longer in the options\n  const selectedValues = (_state$selectedValues = state.selectedValues) != null ? _state$selectedValues : [];\n  const newSelectedValues = selectedValues.filter(selectedValue => options.some(option => optionComparer(option, selectedValue)));\n  return {\n    highlightedValue: newHighlightedOption,\n    selectedValues: newSelectedValues\n  };\n}\nexport default function defaultListboxReducer(state, action) {\n  const {\n    type\n  } = action;\n  switch (type) {\n    case ActionTypes.keyDown:\n      return handleKeyDown(action.event, state, action.props);\n    case ActionTypes.optionClick:\n      return handleOptionSelection(action.option, state, action.props);\n    case ActionTypes.blur:\n      return handleBlur(state);\n    case ActionTypes.setValue:\n      return _extends({}, state, {\n        selectedValues: action.value\n      });\n    case ActionTypes.setHighlight:\n      return _extends({}, state, {\n        highlightedValue: action.highlight\n      });\n    case ActionTypes.textNavigation:\n      return handleTextNavigation(state, action.searchString, action.props);\n    case ActionTypes.optionsChange:\n      return handleOptionsChange(action.options, state, action.props);\n    default:\n      return state;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}